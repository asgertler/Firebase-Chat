{"version":3,"sources":["components/fbauth/FirebaseConfig.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","messagesRef","collection","query","orderBy","limitToLast","bottom","useRef","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","evt","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","useEffect","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","className","src","alt","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAKIA,IAASC,cAAc,CACnBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCCvB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAE3B,SAASC,IAMP,OACE,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAIb,IAASS,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAIrB,iCAIJ,SAASG,IACP,OAAOP,EAAKQ,aACV,wBAAQL,QAAS,kBAAMH,EAAKS,WAA5B,sBAIJ,SAASC,IACP,IAAMC,EAAcV,EAAUW,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,YAAY,IACrDC,EAASC,mBAHG,EAKCC,YAAkBL,EAAO,CAAEM,QAAS,OAAhDC,EALW,sBAOgBC,mBAAS,IAPzB,mBAOXC,EAPW,KAOAC,EAPA,KASZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAIE,iBADc,EAGQ3B,EAAKQ,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZlB,EAAYmB,IAAI,CACpBC,KAAMT,EACNU,UAAWzC,IAASU,UAAUgC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IAZK,2CAAH,sDAmBjB,OAJAY,qBAAU,WACRnB,EAAOoB,QAAQC,eAAe,CAAEC,SAAU,aACzC,CAAClB,IAGF,qCACE,iCACGA,GAAYA,EAASmB,KAAI,SAAAC,GACxB,OAAO,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAG/B,sBAAMC,IAAK5B,OAGb,uBAAM6B,SAAUrB,EAAhB,UACE,uBACEsB,MAAOxB,EACPyB,SAAU,SAACtB,GAAD,OAASF,EAAaE,EAAIuB,OAAOF,QAC3CG,YAAY,oBAEd,wBAAQC,KAAK,SAASC,UAAW7B,EAAjC,gCAMR,SAASmB,EAAYW,GAAQ,IAAD,EACMA,EAAMV,QAA9BX,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbwB,EAAezB,IAAQ5B,EAAKQ,YAAYoB,IAAM,OAAS,WAE7D,OACE,mCACE,sBAAK0B,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAK1B,EAAU2B,IAAI,SACxB,4BAAIzB,SAuBG0B,MAjBf,WAAgB,IAAD,EACEC,YAAa1D,GAArB2D,EADM,oBAGb,OACE,sBAAKL,UAAU,MAAf,UACE,mCACE,+CACA,cAAC/C,EAAD,OAGF,kCACGoD,EAAO,cAACjD,EAAD,IAAe,cAACR,EAAD,UCxG/B0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.46bff9e7.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nexport const FirebaseConfig = () => {\n    firebase.initializeApp({\n        apiKey: \"AIzaSyCtFqdQBWyvbtkW8ilIUL0gLSZAWiBEYys\",\n        authDomain: \"fir-chat-5a132.firebaseapp.com\",\n        projectId: \"fir-chat-5a132\",\n        storageBucket: \"fir-chat-5a132.appspot.com\",\n        messagingSenderId: \"982749765635\",\n        appId: \"1:982749765635:web:c370d7a7964779dc846e36\",\n        measurementId: \"G-YM1N2ZHMDL\"\n    })\n}","import React, { useEffect, useRef, useState } from 'react'\nimport './App.css'\n\nimport firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport { FirebaseConfig } from './components/fbauth/FirebaseConfig.js'\n\nimport { useAuthState } from 'react-firebase-hooks/auth'\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n\nFirebaseConfig()\n\nconst auth = firebase.auth()\nconst firestore = firebase.firestore()\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider()\n    auth.signInWithPopup(provider)\n  }\n\n  return (\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const messagesRef = firestore.collection('messages')\n  const query = messagesRef.orderBy('createdAt').limitToLast(25)\n  const bottom = useRef()\n\n  const [messages] = useCollectionData(query, { idField: 'id' })\n\n  const [formValue, setFormValue] = useState('')\n\n  const sendMessage = async (evt) => {\n    evt.preventDefault()\n\n    const { uid, photoURL } = auth.currentUser\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('')\n  }\n\n  useEffect(() => {\n    bottom.current.scrollIntoView({ behavior: 'smooth' })\n  }, [messages])\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => {\n          return <ChatMessage key={msg.id} message={msg} />\n        })}\n\n        <span ref={bottom}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={(evt) => setFormValue(evt.target.value)}\n          placeholder=\"don't be a jerk\" />\n\n        <button type='submit' disabled={!formValue}>✉️</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received'\n\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <img src={photoURL} alt='User' />\n        <p>{text}</p>\n      </div>\n    </>\n  )\n}\n\nfunction App() {\n  const [user] = useAuthState(auth)\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>Firebase Chat</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}